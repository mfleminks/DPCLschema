{
  "$schema": "http://json-schema.org/draft/2020-12/schema",
  "title": "DPCL",
  "description": "This document records a subset of instructions of a DPCL program",
  "type": "array",
  "items": {
    "$ref": "#/$defs/directive"
  },
  "minItems": 0,
  "$defs": {
    "external_expression": {
      "type": "string"
    },
    "reserved_words": {
      "anyOf": [
        {
          "type": "string",
          "pattern": "(self|super|holder)"
        },
        {
          "$ref": "#/$defs/power_position"
        },
        {
          "$ref": "#/$defs/deontic_position"
        }
      ]
    },
    "atomic_object": {
      "type": "string",
      "pattern": "^([a-z][_\\-a-zA-Z0-9]*)$"
    },
    "universal_descriptor": {
      "type": "string",
      "pattern": "\\*"
    },
    "assignable_name": {
      "allOf": [
        {
          "$ref": "#/$defs/atomic_object"
        },
        {
          "not": {
            "$ref": "#/$defs/reserved_words"
          }
        }
      ],
      "description": "Names that can be given to objects"
    },
    "referencable_name": {
      "allOf": [
        {
          "anyOf": [
            {
              "$ref": "#/$defs/atomic_object"
            },
            {
              "$ref": "#/$defs/universal_descriptor"
            }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "$ref": "#/$defs/reserved_words"
              }
            },
            {
              "type": "string",
              "pattern": "(self|super|holder)"
            }
          ]
        }
      ],
      "description": "Names that can be referenced, but not necessarily assigned"
    },
    "atomic_object_declarations": {
      "type": "object",
      "properties": {
        "atomics": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/assignable_name"
          }
        }
      },
      "required": [
        "atomics"
      ],
      "additionalProperties": false
    },
    "scoped_object": {
      "type": "object",
      "properties": {
        "scope": {
          "$ref": "#/$defs/object_reference"
        },
        "name": {
          "anyOf": [
            {
              "$ref": "#/$defs/atomic_object"
            },
            {
              "$ref": "#/$defs/refined_object"
            }
          ]
        }
      },
      "required": [
        "scope",
        "name"
      ],
      "additionalProperties": false
    },
    "scoped_event": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/$defs/object_reference"
        },
        "action": {
          "oneOf": [
            {
              "$ref": "#/$defs/atomic_event"
            },
            {
              "$ref": "#/$defs/refined_event"
            }
          ]
        }
      },
      "required": [
        "agent",
        "action"
      ],
      "additionalProperties": false
    },
    "atomic_params": {
      "anyOf": [
        {
          "$ref": "#/$defs/atomic_event"
        },
        {
          "$ref": "#/$defs/atomic_object"
        }
      ]
    },
    "power_position": {
      "type": "string",
      "pattern": "^(power|liability|disability|immunity)$"
    },
    "deontic_position": {
      "type": "string",
      "pattern": "^(duty|prohibition|liberty|claim|protection|no-claim)$"
    },
    "refinement": {
      "type": "object",
      "propertyNames": {
        "oneOf": [
          {
            "$ref": "#/$defs/referencable_name"
          },
          {
            "$ref": "#/$defs/atomic_event"
          }
        ]
      },
      "patternProperties": {
        "#": {
          "oneOf": [
            {
              "$ref": "#/$defs/atomic_event"
            },
            {
              "$ref": "#/$defs/wildcard_event"
            }
          ]
        },
        "!#": {
          "$ref": "#/$defs/object_reference"
        }
      }
    },
    "refined_object": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/$defs/referencable_name"
        },
        "refinement": {
          "$ref": "#/$defs/refinement"
        },
        "alias": {
          "$ref": "#/$defs/atomic_object"
        }
      },
      "required": [
        "object",
        "refinement"
      ],
      "additionalProperties": false
    },
    "unscoped_object": {
      "anyOf": [
        {
          "$ref": "#/$defs/object_reference"
        },
        {
          "$ref": "#/$defs/power_frame"
        },
        {
          "$ref": "#/$defs/deontic_frame"
        }
      ]
    },
    "object_reference": {
      "anyOf": [
        {
          "$ref": "#/$defs/referencable_name"
        },
        {
          "$ref": "#/$defs/refined_object"
        },
        {
          "$ref": "#/$defs/scoped_object"
        }
      ]
    },
    "object": {
      "anyOf": [
        {
          "$ref": "#/$defs/unscoped_object"
        },
        {
          "$ref": "#/$defs/scoped_object"
        }
      ]
    },
    "atomic_event": {
      "type": "string",
      "pattern": "^#[a-z][_a-zA-Z0-9]*$"
    },
    "wildcard_event": {
      "type": "string",
      "pattern": "^#\\*$",
      "description": "Wildcard action for use as parameter in powers"
    },
    "refined_event": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/$defs/atomic_event"
        },
        "refinement": {
          "$ref": "#/$defs/refinement"
        }
      },
      "required": [
        "event",
        "refinement"
      ],
      "additionalProperties": false
    },
    "transition_event": {
      "anyOf": [
        {
          "$ref": "#/$defs/production_event"
        },
        {
          "$ref": "#/$defs/naming_event"
        }
      ]
    },
    "production_event": {
      "type": "object",
      "properties": {
        "plus": {
          "$ref": "#/$defs/object"
        },
        "minus": {
          "$ref": "#/$defs/object"
        }
      },
      "oneOf": [
        {
          "required": [
            "plus"
          ]
        },
        {
          "required": [
            "minus"
          ]
        }
      ],
      "additionalProperties": false
    },
    "naming_event": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/$defs/object_reference"
        },
        "descriptor": {
          "$ref": "#/$defs/object_reference"
        },
        "gains": {
          "$ref": "#/$defs/boolean_literal"
        }
      },
      "required": [
        "entity",
        "gains",
        "descriptor"
      ],
      "additionalProperties": false
    },
    "action": {
      "oneOf": [
        {
          "$ref": "#/$defs/atomic_event"
        },
        {
          "$ref": "#/$defs/refined_event"
        },
        {
          "$ref": "#/$defs/scoped_event"
        }
      ]
    },
    "event": {
      "oneOf": [
        {
          "$ref": "#/$defs/action"
        },
        {
          "$ref": "#/$defs/transition_event"
        }
      ]
    },
    "descriptor_condition": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/$defs/object_reference"
        },
        "has": {
          "$ref": "#/$defs/boolean_literal"
        },
        "descriptor": {
          "$ref": "#/$defs/object_reference"
        }
      },
      "required": [
        "entity",
        "has",
        "descriptor"
      ]
    },
    "boolean_negation": {
      "type": "object",
      "properties": {
        "negate": {
          "$ref": "#/$defs/boolean_expression"
        }
      },
      "required": [
        "negate"
      ]
    },
    "boolean_literal": {
      "type": "boolean"
    },
    "boolean_expression": {
      "oneOf": [
        {
          "$ref": "#/$defs/object_reference"
        },
        {
          "$ref": "#/$defs/descriptor_condition"
        },
        {
          "$ref": "#/$defs/boolean_literal"
        },
        {
          "$ref": "#/$defs/boolean_negation"
        }
      ]
    },
    "transformational_rule": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/$defs/boolean_expression"
        },
        "conclusion": {
          "$ref": "#/$defs/boolean_expression"
        },
        "alias": {
          "$ref": "#/$defs/atomic_object"
        }
      },
      "required": [
        "condition",
        "conclusion"
      ],
      "additionalProperties": false
    },
    "reactive_rule": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/$defs/event"
        },
        "reaction": {
          "$ref": "#/$defs/transition_event"
        },
        "alias": {
          "$ref": "#/$defs/atomic_object"
        }
      },
      "required": [
        "reaction"
      ],
      "additionalProperties": false
    },
    "power_frame": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/$defs/power_position"
        },
        "holder": {
          "$ref": "#/$defs/object_reference"
        },
        "action": {
          "oneOf": [
            {
              "$ref": "#/$defs/atomic_event"
            },
            {
              "$ref": "#/$defs/refined_event"
            }
          ]
        },
        "consequence": {
          "$ref": "#/$defs/transition_event"
        },
        "alias": {
          "$ref": "#/$defs/assignable_name"
        }
      },
      "required": [
        "position",
        "action",
        "consequence"
      ],
      "additionalProperties": false
    },
    "deontic_frame": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/$defs/deontic_position"
        },
        "holder": {
          "$ref": "#/$defs/object_reference"
        },
        "counterparty": {
          "$ref": "#/$defs/object_reference"
        },
        "action": {
          "$ref": "#/$defs/action"
        },
        "violation": {
          "oneOf": [
            {
              "$ref": "#/$defs/boolean_expression"
            },{
              "$ref": "#/$defs/event"
            }
          ]
        },
        "fulfillment": {
          "oneOf": [
            {
              "$ref": "#/$defs/boolean_expression"
            },{
              "$ref": "#/$defs/event"
            }
          ]
        },
        "termination": {
          "oneOf": [
            {
              "$ref": "#/$defs/boolean_expression"
            },{
              "$ref": "#/$defs/event"
            }
          ]
        },
        "alias": {
          "$ref": "#/$defs/atomic_object"
        }
      },
      "required": [
        "position",
        "action"
      ],
      "additionalProperties": false
    },
    "compound_frame": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/$defs/assignable_name"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/atomic_params"
          },
          "minItems": 1
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/directive"
          }
        },
        "initial_descriptors": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/object_reference"
          }
        }
      },
      "required": [
        "object",
        "content"
      ],
      "additionalProperties": false
    },
    "import": {
      "type": "object",
      "properties": {
        "import": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        }
      },
      "required": [
        "import",
        "alias"
      ],
      "additionalProperties": false
    },
    "directive": {
      "oneOf": [
        {
          "$ref": "#/$defs/transformational_rule"
        },
        {
          "$ref": "#/$defs/reactive_rule"
        },
        {
          "$ref": "#/$defs/deontic_frame"
        },
        {
          "$ref": "#/$defs/power_frame"
        },
        {
          "$ref": "#/$defs/compound_frame"
        },
        {
          "$ref": "#/$defs/event"
        },
        {
          "$ref": "#/$defs/atomic_object_declarations"
        },
        {
          "$ref": "#/$defs/import"
        }
      ]
    }
  }
}
